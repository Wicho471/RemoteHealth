name: Build & Release RemoteHealth

on:
  push:
    tags:
      - 'v*'          # se ejecuta solo al pushear un tag vX.Y.Z

permissions:
  contents: write      # necesario para checkout; el PAT cubrirá el release

env:                   # variable común para todos los jobs
  GH_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}

jobs:
# ──────────────────────────────────────────────────────────────
# 1. Crear el release una sola vez
# ──────────────────────────────────────────────────────────────
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Instalar GitHub CLI
        run: |
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
          sudo apt-add-repository https://cli.github.com/packages -y
          sudo apt-get update -y
          sudo apt-get install gh -y

      - name: Autenticar CLI
        run:  echo "$GH_TOKEN" | gh auth login --with-token

      - name: Crear Release
        env:
          TAG: ${{ github.ref_name }}
        run: |
          gh release create "$TAG" \
            --title "RemoteHealth $TAG" \
            --notes "Release generado automáticamente para $TAG"

# ──────────────────────────────────────────────────────────────
# 2. Windows
# ──────────────────────────────────────────────────────────────
  build-windows:
    needs: create-release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Build Fat JAR
        run: mvn -B clean package

      - name: Crear MSI con jpackage
        run: |
          jpackage --input target ^
                   --name RemoteHealth ^
                   --main-jar RemoteHealth-0.0.1-SNAPSHOT-jar-with-dependencies.jar ^
                   --main-class org.axolotlj.RemoteHealth.MainApp ^
                   --type msi ^
                   --win-shortcut ^
                   --win-menu ^
                   --win-menu-group "RemoteHealth"
                   --icon src/main/resources/org/axolotlj/RemoteHealth/img/favicons/app-icon.png

      - name: Instalar GitHub CLI
        run: choco install gh -y

      - name: Autenticar CLI
        shell: pwsh
        run: |
          echo $env:GH_TOKEN | gh auth login --with-token

      - name: Subir artefactos (MSI + JAR)
        env:
          TAG: ${{ github.ref_name }}
        run: |
          gh release upload "$TAG" target/RemoteHealth-*.msi
          gh release upload "$TAG" target/RemoteHealth-*-jar-with-dependencies.jar

# ──────────────────────────────────────────────────────────────
# 3. macOS
# ──────────────────────────────────────────────────────────────
  build-macos:
    needs: create-release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Build Fat JAR
        run: mvn -B clean package

      - name: Crear DMG con jpackage
        run: |
          jpackage \
            --input target \
            --name RemoteHealth \
            --main-jar RemoteHealth-0.0.1-SNAPSHOT-jar-with-dependencies.jar \
            --main-class org.axolotlj.RemoteHealth.MainApp \
            --type dmg

      - name: Instalar GitHub CLI
        run: brew install gh

      - name: Autenticar CLI
        run: echo "$GH_TOKEN" | gh auth login --with-token

      - name: Subir DMG
        env:
          TAG: ${{ github.ref_name }}
        run: gh release upload "$TAG" target/RemoteHealth-*.dmg

# ──────────────────────────────────────────────────────────────
# 4. Linux
# ──────────────────────────────────────────────────────────────
  build-linux:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Build Fat JAR
        run: mvn -B clean package

      - name: Instalar dependencias de jpackage
        run: sudo apt-get install -y fakeroot dpkg rpm

      - name: Crear DEB con jpackage
        run: |
          jpackage \
            --input target \
            --name RemoteHealth \
            --main-jar RemoteHealth-0.0.1-SNAPSHOT-jar-with-dependencies.jar \
            --main-class org.axolotlj.RemoteHealth.MainApp \
            --type deb

      - name: Instalar GitHub CLI
        run: |
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
          sudo apt-add-repository https://cli.github.com/packages -y
          sudo apt-get update -y
          sudo apt-get install gh -y

      - name: Autenticar CLI
        run: echo "$GH_TOKEN" | gh auth login --with-token

      - name: Subir DEB
        env:
          TAG: ${{ github.ref_name }}
        run: gh release upload "$TAG" target/RemoteHealth-*.deb
