name: Build & Release RemoteHealth

on:
  push:
    tags:
      - 'v*'  # se ejecuta solo al pushear un tag vX.Y.Z

permissions:
  contents: write

env:
  GH_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
  JAVAFX_VERSION: 21.0.6

jobs:
# ──────────────────────────────────────────────────────────────
# 1️⃣ Crear el release una sola vez
# ──────────────────────────────────────────────────────────────
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Instalar GitHub CLI
        run: |
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
          sudo apt-add-repository https://cli.github.com/packages -y
          sudo apt-get update -y
          sudo apt-get install gh -y

      - name: Autenticar CLI
        run: echo "$GH_TOKEN" | gh auth login --with-token

      - name: Crear Release
        env:
          TAG: ${{ github.ref_name }}
        run: |
          gh release create "$TAG" \
            --title "RemoteHealth $TAG" \
            --notes "Release generado automáticamente para $TAG"

# ──────────────────────────────────────────────────────────────
# 2️⃣ Windows
# ──────────────────────────────────────────────────────────────
  build-windows:
    needs: create-release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Build Fat JAR
        run: mvn -B clean package

      - name: Descargar JavaFX JMODS
        run: |
          Invoke-WebRequest https://download2.gluonhq.com/openjfx/${{ env.JAVAFX_VERSION }}/openjfx-${{ env.JAVAFX_VERSION }}_windows-x64_bin-jmods.zip -OutFile javafx-jmods.zip
          Expand-Archive javafx-jmods.zip -DestinationPath javafx-jmods

      - name: Crear runtime image con jlink
        run: |
          jlink --module-path "$env:JAVA_HOME/jmods;javafx-jmods/javafx-jmods-${{ env.JAVAFX_VERSION }}" `
                --add-modules javafx.controls,javafx.fxml,javafx.swing `
                --output target/RemoteHealth-runtime

      - name: Crear MSI con jpackage
        run: |
          jpackage --input target `
                   --name RemoteHealth `
                   --main-jar RemoteHealth-0.0.1-SNAPSHOT-jar-with-dependencies.jar `
                   --main-class org.axolotlj.RemoteHealth.MainApp `
                   --type msi `
                   --runtime-image target/RemoteHealth-runtime `
                   --win-shortcut `
                   --win-menu `
                   --win-menu-group "RemoteHealth" `
                   --icon src/main/resources/org/axolotlj/RemoteHealth/img/favicons/app-icon.png

      - name: Instalar GitHub CLI
        run: choco install gh -y

      - name: Autenticar CLI
        shell: pwsh
        run: |
          echo $env:GH_TOKEN | gh auth login --with-token

      - name: Subir artefactos (MSI + JAR)
        env:
          TAG: ${{ github.ref_name }}
        run: |
          gh release upload "$TAG" target/RemoteHealth-*.msi
          gh release upload "$TAG" target/RemoteHealth-*-jar-with-dependencies.jar

# ──────────────────────────────────────────────────────────────
# 3️⃣ macOS
# ──────────────────────────────────────────────────────────────
  build-macos:
    needs: create-release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Build Fat JAR
        run: mvn -B clean package

      - name: Descargar JavaFX JMODS
        run: |
          curl -L -o javafx-jmods.zip https://download2.gluonhq.com/openjfx/${{ env.JAVAFX_VERSION }}/openjfx-${{ env.JAVAFX_VERSION }}_osx-x64_bin-jmods.zip
          unzip javafx-jmods.zip -d javafx-jmods

      - name: Crear runtime image con jlink
        run: |
          jlink --module-path "$JAVA_HOME/jmods:javafx-jmods/javafx-jmods-${{ env.JAVAFX_VERSION }}" \
                --add-modules javafx.controls,javafx.fxml,javafx.swing \
                --output target/RemoteHealth-runtime

      - name: Crear DMG con jpackage
        run: |
          jpackage \
            --input target \
            --name RemoteHealth \
            --main-jar RemoteHealth-0.0.1-SNAPSHOT-jar-with-dependencies.jar \
            --main-class org.axolotlj.RemoteHealth.MainApp \
            --type dmg \
            --runtime-image target/RemoteHealth-runtime

      - name: Instalar GitHub CLI
        run: brew install gh

      - name: Autenticar CLI
        run: echo "$GH_TOKEN" | gh auth login --with-token

      - name: Subir DMG
        env:
          TAG: ${{ github.ref_name }}
        run: gh release upload "$TAG" target/RemoteHealth-*.dmg

# ──────────────────────────────────────────────────────────────
# 4️⃣ Linux
# ──────────────────────────────────────────────────────────────
  build-linux:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Build Fat JAR
        run: mvn -B clean package

      - name: Instalar dependencias de jpackage
        run: sudo apt-get install -y fakeroot dpkg rpm

      - name: Descargar JavaFX JMODS
        run: |
          wget https://download2.gluonhq.com/openjfx/${{ env.JAVAFX_VERSION }}/openjfx-${{ env.JAVAFX_VERSION }}_linux-x64_bin-jmods.zip -O javafx-jmods.zip
          unzip javafx-jmods.zip -d javafx-jmods

      - name: Crear runtime image con jlink
        run: |
          jlink --module-path "$JAVA_HOME/jmods:javafx-jmods/javafx-jmods-${{ env.JAVAFX_VERSION }}" \
                --add-modules javafx.controls,javafx.fxml,javafx.swing \
                --output target/RemoteHealth-runtime

      - name: Crear DEB con jpackage
        run: |
          jpackage \
            --input target \
            --name RemoteHealth \
            --main-jar RemoteHealth-0.0.1-SNAPSHOT-jar-with-dependencies.jar \
            --main-class org.axolotlj.RemoteHealth.MainApp \
            --type deb \
            --runtime-image target/RemoteHealth-runtime

      - name: Instalar GitHub CLI
        run: |
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
          sudo apt-add-repository https://cli.github.com/packages -y
          sudo apt-get update -y
          sudo apt-get install gh -y

      - name: Autenticar CLI
        run: echo "$GH_TOKEN" | gh auth login --with-token

      - name: Subir DEB
        env:
          TAG: ${{ github.ref_name }}
        run: gh release upload "$TAG" target/RemoteHealth-*.deb
